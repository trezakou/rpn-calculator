[tool.poetry]
name = "rpn-calculator"
version = "1.0.0"
description = "RPN calculator implementation using fastapi and temporal"
authors = ["marouanelehim@gmail.com"]
readme = "README.md"
homepage = "https://github.com/trezakou/rpn-calculator"
repository = "https://github.com/trezakou/rpn-calculator"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.4"
httpx = "^0.27.2"
uvicorn = "^0.32.0"
SQLAlchemy = "^2.0.36"
sqlmodel = "^0.0.22"
typing-extensions = "^4.12.2"
temporalio = "^1.8.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.7.2"
mypy = "^1.13.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
coverage = "^7.6.4"
isort = "^5.13.2"
black = "^24.10.0"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",  # PEP8 naming conventions
    "D"  # pydocstyle
]
ignore = [
    # "C901",  # too complex
    # "W191",  # indentation contains tabs
    # "D401",  # imperative mood
    "D103", # missing docstring in public function
    "D100", # missing docstring in public module
    "D101", # missing docstring in public class
    "D107", # Missing docstring in `__init__`
    "D102", # Missing docstring in public method
    "D104", # Missing docstring in public package
]

[tool.ruff.lint.pydocstyle]
convention = "google"
